<template>
	<view class="productDetail">
		<!-- <view class="page-section page-section-spacing swiper">
			<swiper indicator-dots="{{indicatorDots}}"	autoplay="{{autoplay}}"	interval="{{interval}}" duration="{{duration}}"	@change="swiperChange">
				 <repeat for="{{banner}}" item="item">
					<swiper-item>
						<image class="swiper-item" src='{{requestImgUrl+item.path}}'>
					</swiper-item>
				</repeat>
			</swiper>
			<view class="imageCount">{{current+1}}/{{banner.length}}</view>
		</view> -->
		<view class="productDetailContent">
			<view class="item">
				<view class="storeTitle">
					<text class="title">{{productDetail.title}}</text>
					<!-- <text class="titleTip">车队</text> -->
				</view>
			</view>
			<view class="item flex mar">
				<label>描述</label>
				<text>{{productDetail.description}}</text>
			</view>
			<view class="item flex mar">
				<label>价格</label>
				<text>￥{{productDetail.price}}</text>
			</view>
      <view class="item shopOne">
        <text>所含单品</text>
        
          <repeat for="{{productDetail.items}}" item="item">
            <view style="margin-top:80rpx;">
              <view  class="shopOneFlex">
                <text>单品名称</text>
                <text>{{item.service.title}}</text>
              </view>
              <view  class="shopOneFlex">
                <text>单品数量</text>
                <text>{{item.amount}}</text>
              </view>
              <view  class="shopOneFlex">
                <text>单品描述</text>
                <text>{{item.description}}</text>
              </view>
            </view>
          </repeat>
      </view>
			<cal></cal>
		</view>
		<button class="button" @tap="next" data-id="{{productDetail.merchant_id}}" wx:if="{{userInfo.type == 'normal' || isTourist == true}}">下单</button>
		<button class="button" @tap="next" data-id="{{productDetail.id}}" wx:if="{{userInfo.type == 'merchant'}}">编辑</button>
	</view>
</template>

<script>
import wepy from 'wepy'
import Call from '../components/call' // 客服
export default class PostMoreDetail extends wepy.page {
  config = {
    navigationBarTitleText: '套餐详情'
  };
  data = {
    banner: [],
		userInfo: {},
		current:0,
		orderId: '',
		productDetail: { },
		options: null,
		requestImgUrl: '',
		isTourist: false
	};
	components = {
		cal:Call
	}

	mixins = []

	computed = {

	}

	methods = {
		next(e) {
			// 游客校验
			if (this.isTourist) {
				wx.showModal({
					title: '提示',
					content: '游客不能下单，是否前往注册？',
					success: res => {
						if (res.confirm) {
							// console.log('用户点击确定')
							this.$redirect('/pages/registeredSel')
						} else if (res.cancel) {
							// console.log('用户点击取消')
						}
					}
				})
				return false
			}
			if(this.userInfo.type == 'normal'){
				this.productDetail.merchant_id = this.productDetail.merchant_id
				console.log(this.productDetail.merchant_id)
				let serviceNode = JSON.stringify(this.productDetail)
				console.log(serviceNode)
				let url = `/pages/moreOrderDetail?node=${serviceNode}`
			  this.$navigate(url)
			}else{
				let url = `/pages/postMoreChange?id=${e.currentTarget.dataset.id}`
			  this.$navigate(url)
			}
			this.$apply
		}
	}

	events = {

	}

	onLoad(options) {
		this.options = options
		this.orderId = options.id
		// 获取用户是否为游客
    this.isTourist = this.$parent.globalData.isTourist
		this.userInfo = this.$parent.globalData.userInfo
		this.requestImgUrl = this.$parent.globalData.requestImgUrl
		this.productContent()
	}
	productContent() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/merchant/bundle/${this.orderId}`,
      method: 'GET',
      header: {
        Authorization: this.$parent.globalData.token
      },
      success: data => {
        wx.hideToast()
        data = this.$parent.null2str(data)
        console.log(data)
        if (data.data.status_code == 200) {
					this.productDetail = data.data.data
          this.$apply()
        }else if (data.data.status_code == 400) {
					console.log(data.data.status_code)
					wx.showToast({
						title: '服务不存在',
						icon: 'none',
						duration: 10000
					})
					setTimeout(() => {
						wx.navigateBack({
							delta: -1
						})
					}, 2000)
				}
      }
    })
	}
	swiperChange (e) {
    var that = this;
    if (e.detail.source == 'touch') {
      that.current= e.detail.current
    }
  }
}
</script>
<style lang="less">
.productDetail {
	width: 750rpx;
	padding-bottom: 120rpx;
	.swiper{
		width: 750rpx;
		height: 314rpx;
		position: relative;
		swiper{
			width: 750rpx;
			height: 100%;
		}
		image{
			width: 100%;
			height: 100%;
		}
		.imageCount {
			width:120rpx;
			height:50rpx;
			background-color: rgba(0, 0, 0, 0.3);
			border-radius:40rpx;
			line-height:50rpx;
			color:#fff;
			text-align:center;
			font-size:26rpx;
			position:absolute;
			right:26rpx;
			bottom:20rpx;
		}
	}
	.productDetailContent{
		.mar{
			padding-bottom: 18rpx !important;
		}
		.item{
			padding: 30rpx 30rpx 0;
			// border-bottom: 2rpx solid #D8D8D8;
			.title{
				text-align: center;
				display: inline-block;
				font-size: 32rpx;
				font-weight: 600;
				color: #1F1F1F;
			}
			.titleTip{
				border: 1rpx solid #F42652;
				color: #F42652;
				padding: 2rpx 6rpx;
				border-radius: 4rpx;
				display: initial;
				text-align: center;
				font-size: 20rpx;
				margin-left: 10rpx;
			}
			.tip{
				text-align: center;
				font-size: 24rpx;
				color: #494949;
				display: block;
				margin-top: 10rpx;
			}
			label{
				font-size: 30rpx;
				color: #333333;
        display: block;
        font-weight: 600;
        word-break: keep-all;
        margin-right: 10rpx;
			}
			text{
				font-size: 30rpx;
				color: #333333;
				display: block;
			}
			text.cur{
				font-weight: 600;
				font-size: 32rpx;
				color: #F42652;
      }
    }
    .shopOne{
      text{
        text-align: left;
        color: #333;
        font-weight: 600;
        font-size: 30rpx;
      }
      .shopOneFlex{
        display: flex;
        justify-content: space-between;
        tab-size: 26rpx;
        margin-top: 30rpx;
        padding: 0 30rpx;
      }
    }
		.flex{
			display: flex;
			justify-content: space-between;
		}
	}
	.prompt{
		font-size: 30rpx;
		padding: 30rpx;
		display: block;
		color: #494949;
	}
	.button{
		position: fixed;
		left: 0;
		bottom: 0;
		width: 750rpx;
		background: #F42652;
		border-radius: 0;
		text-align: center;
		padding: 12rpx 0;
		color: #fff;
		// margin: 100rpx auto 0;
		font-size: 30rpx;
		font-weight: 600
	}
}
</style>
