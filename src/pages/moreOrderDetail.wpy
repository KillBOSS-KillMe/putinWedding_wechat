<template>
  <view class="orderDetail">
    <view class="orderContent">
      <view class="flex item">
        <label>开始时间：</label>
        <picker mode="multiSelector" data-stater="reservation_time_start" bindchange="bindMultiPickerChange" bindcolumnchange="bindMultiPickerColumnChange" value="{{multiIndex}}" range="{{multiArray}}">
          <view class="flex inputItem">
            <input type="text" placeholder="请选择开始时间" value="{{formNode.reservation_time_start}}" disabled />
            <icon class="iconfont iconriqi"></icon>
          </view>
        </picker>
      </view>
      <view class="flex item">
        <label>结束时间：</label>
        <picker mode="multiSelector" data-stater="reservation_time_end" bindchange="bindMultiPickerChange" bindcolumnchange="bindMultiPickerColumnChange" value="{{multiIndex}}" range="{{multiArray}}">
          <view class="flex inputItem">
            <input type="text" placeholder="请选择结束时间" value="{{formNode.reservation_time_end}}" disabled />
            <icon class="iconfont iconriqi"></icon>
          </view>
        </picker>
      </view>
      <view class="flex item" style="align-items:initial">
        <label>选择地点：</label>
        <view class="address">
          <input type="text" value="{{formNode.reservation_address}}" placeholder="选择地点" disabled @tap="getAddress" />
          <map id="map" @tap="getAddress" longitude="113.324520" latitude="23.099994" scale="14" controls="{{controls}}" bindcontroltap="controltap" markers="{{markers}}" bindmarkertap="markertap" polyline="{{polyline}}" bindregionchange="regionchange" show-location style="width: 100%; height: 200rpx;margin-top:20rpx"></map>
        </view>
      </view>
      <!-- <view class="flex item">
        <label>输入数量：</label>
        <view class="flex inputItem">
          <input type="number" data-name="service_sum" @input="getSetData" placeholder="请输入数量 (剩余库存{{options.amount}})" value="">
        </view>
      </view> -->
      <view class="flex item">
        <label>支付方式：</label>
        <view class="section section_gap">
          <radio-group class="radio-group" @change="radioChange">
              <!-- deposit: 付押金 full:付全款 -->
              <radio class="radio" value="full">
                  <text>支付全款</text>
              </radio>
              <radio class="radio" value="deposit">
                  <text>支付定金</text>
              </radio>
          </radio-group>
        </view>
      </view>
      <view class="item" wx:if="{{formNode.pay_type != ''}}">
        <label>订单详情：</label>
        {{productDetail.price}}
        <view class="itemDetail">
          <!-- <view class="flex">
            <text>用车天数：</text>
            <text>1天</text>
          </view>
          <view class="flex">
            <text>用车数量：</text>
            <text>{{item.money}}辆</text>
          </view> -->
          <view class="flex" wx:if="{{formNode.pay_type == 'full'}}">
            <text>订单金额：</text>
            <text>￥{{options.price}}</text>
          </view>
          <view class="flex" wx:if="{{formNode.pay_type == 'deposit'}}">
            <text>订金金额：</text>
            <text>￥{{options.deposit}}</text>
          </view>
          <view class="flex" wx:if="{{formNode.pay_type == 'deposit'}}">
            <text>尾款金额：</text>
            <text>￥{{options.remaining_money}}</text>
          </view>
        </view>
      </view>
    </view>
    <button class="bottom" @tap="sub">立即下单</button>
    <cal></cal>
  </view>
</template>

<script>
const date = new Date()
const years = []
const months = []
const days = []
const hours = []
const minutes = []

const monthsTime = parseInt(date.getMonth())
const daysTime  = parseInt(date.getDate() - 1)
const hoursTime  = parseInt(date.getHours())
const minutesTime  = parseInt(date.getMinutes())
// 获取年
for (let i = date.getFullYear(); i <= date.getFullYear() + 1; i++) {
  years.push('' + i)
}
// 获取月份
for (let i = 1; i <= 12; i++) {
  if (i < 10) {
    i = '0' + i
  }
  months.push('' + i)
}
// 获取日期
for (let i = 1; i <= 31; i++) {
  if (i < 10) {
    i = '0' + i
  }
  days.push('' + i)
}
// 获取小时
for (let i = 0; i < 24; i++) {
  if (i < 10) {
    i = '0' + i
  }
  hours.push('' + i)
}
// 获取分钟
for (let i = 0; i < 60; i++) {
  if (i < 10) {
    i = '0' + i
  }
  minutes.push('' + i)
}

  import wepy from 'wepy'
  import Call from '../components/call' // 客服
  export default class moreOrderDetail extends wepy.page {
    config = {
      navigationBarTitleText: '套餐订单详情'
    }
    components = {
      cal:Call
    }

    mixins = []

    data = {
      multiIndex: [0, monthsTime, daysTime, hoursTime, minutesTime],
      multiArray: [years, months, days, hours, minutes],
      options: null,
      formNode: {
        merchant_id: '',                // 商户id
        reservation_time_start: '',     // 开始时间
        reservation_time_end: '',       // 结束时间
        reservation_address: '',        // 地址
        bundle_id: '',                 // 服务ID
        lon: '',                        // 经纬度
        lat: '',                        // 经纬度
        pay_type: ''                    // 付款类型  deposit: 付押金 full:付全款
      },
     orderId:''
    }

    computed = {
      
    }

    methods = {
      // 表单数据获取
      getSetData(e) {
        let formNode = this.formNode
        let name = e.currentTarget.dataset.name
        let value = e.detail.value
        formNode[name] = value
        this.formNode = formNode
        this.$apply()
      },
      //获取微信内置选择位置地图
      getAddress() {
        wx.chooseLocation({
          type: 'gcj02', //返回可以用于wx.openLocation的经纬度
          success: res => {
            console.log(res)
            this.formNode.reservation_address = res.address
            this.formNode.lon = res.longitude
            this.formNode.lat = res.latitude
            this.$apply()
          }
        })
      },
      //付款方式
      radioChange(e) {
        console.log(e.detail.value)
        this.formNode.pay_type = e.detail.value
        this.$apply()
      },
      // 获取时间日期
      bindMultiPickerChange(e) {
        this.multiIndex = e.detail.value
        const index = this.multiIndex
        const year = this.multiArray[0][index[0]]
        const month = this.multiArray[1][index[1]]
        const day = this.multiArray[2][index[2]]
        const hour = this.multiArray[3][index[3]]
        const minute = this.multiArray[4][index[4]]
        let time = year + '-' + month + '-' + day + ' ' + hour + ':' + minute
        let sta = e.currentTarget.dataset.stater
        console.log(sta, '', time)
        this.formNode[sta] = time
        this.$apply()
      },
    }

    events = {

    }

    onLoad(options) {
      console.log(options)
      options.node = JSON.parse(options.node)
      this.options = options.node
      this.formNode.merchant_id = this.options.merchant_id
      this.formNode.bundle_id = this.options.id
      console.log(this.formNode)
      this.$apply()
    }
 
    onshow() {
    }

    sub() {
      console.log(this.formNode)
      let formNode = this.formNode
      // =============时间校验开始=============
      if (formNode.reservation_time_start == '' || formNode.reservation_time_end == '') {
        wx.showToast({
          title: '请选择时间',
          icon: 'none'
        })
        return false
      }
      let nowTime = new Date().getTime()
      let time_start = new Date(formNode.reservation_time_start).getTime()
      let time_end = new Date(formNode.reservation_time_end).getTime()
      if (nowTime > time_start || nowTime > time_end) {
        wx.showToast({
          title: '不能选择过去的时间',
          icon: 'none'
        })
        return false
      }
      if (time_start > time_end) {
        wx.showToast({
          title: '开始时间不能大于结束时间',
          icon: 'none'
        })
        return false
      }
            // 地址校验
      if (formNode.reservation_address == ' ') {
        wx.showToast({
          title: '请选择地址',
          icon: 'none'
        })
      }
      // =============时间校验结束=============
      if (formNode.pay_type == '') {
        wx.showToast({
          title: '请选择支付方式',
          icon: 'none'
        })
        return false
      }
      // return false
      wx.showToast({
        title: '数据提交中...',
        icon: 'loading',
        duration: 1000000
      })
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/orders/bundle_place_order`,
        method: 'POST',
        header: {
          Authorization: this.$parent.globalData.token,
          apikey: this.$parent.globalData.apikey
        },
        data: this.formNode,
        success: data => {
          wx.hideToast()
          data = this.$parent.null2str(data)
          console.log(data)

          // 获取到调用支付的数据
          // 调用支付
          if (data.data.status_code == 200) {
            this.wechatPay(data.data.data.id)
          } else if (data.data.status_code == 400) {
            let message = data.data.errors.service_sum[0]
            wx.showToast({
              title: message,
              icon: 'none',
              duration: 2000
            })
          }
        }
      })
    }
    wechatPay(id) {
      wx.request({
        url: `${this.$parent.globalData.requestUrl}/payment/wechat_pay`,
        method: 'POST',
        header: {
          Authorization: this.$parent.globalData.token,
          apikey: this.$parent.globalData.apikey
        },
        data: {
          order_id: id
        },
        success: data => {
          wx.hideToast()
          data = this.$parent.null2str(data)
          console.log(data)
          let payNode = data.data
          wx.requestPayment({
            'timeStamp': payNode.timeStamp,
            'nonceStr': payNode.nonceStr,
            'package': payNode.package,
            'signType': payNode.signType,
            'paySign': payNode.paySign,
            'success': data => {
              wx.hideToast()
              wx.showToast({
                title: "支付成功",
                icon: 'success',
                duration: 2000
              });
              // 两秒后返回上一页
              setTimeout(e => {
                let url = `/pages/paySuccess`
                this.$navigate(url)
              }, 2000)
            },
            'fail': data => {
              wx.hideToast()
              wx.showToast({
                title: "充值失败",
                icon: 'none',
                duration: 2000
              });
            }
          })
        }
      })
    }
    
    // 监听picker的滚动事件
    bindMultiPickerColumnChange(e) {
      // 获取年份
      if (e.detail.column === 0) {
        let chooseYear = this.multiArray[e.detail.column][e.detail.value]
      }
      if (e.detail.column === 1) {
        let num = parseInt(this.multiArray[e.detail.column][e.detail.value])
        let temp = []
        if (num === 1 || num === 3 || num === 5 || num === 7 || num === 8 || num === 10 || num === 12) {
          // 判断31天的月份
          for (let i = 1; i <= 31; i++) {
            if (i < 10) {
              i = '0' + i
            }
            temp.push('' + i)
          }
          this.multiArray[2] = temp
        } else if (num === 4 || num === 6 || num === 9 || num === 11) {
          // 判断30天的月份
          for (let i = 1; i <= 30; i++) {
            if (i < 10) {
              i = '0' + i
            }
            temp.push('' + i)
          }
          this.multiArray[2] = temp
        } else if (num === 2) {
          // 判断2月份天数
          let year = parseInt(this.chooseYear)
          if (((year % 400 === 0) || (year % 100 !== 0)) && (year % 4 === 0)) {
            for (let i = 1; i <= 29; i++) {
              if (i < 10) {
                i = '0' + i
              }
              temp.push('' + i)
            }
            this.multiArray[2] = temp
          } else {
            for (let i = 1; i <= 28; i++) {
              if (i < 10) {
                i = '0' + i
              }
              temp.push('' + i)
            }
            this.multiArray[2] = temp
          }
        }
      }
      var data = {
        multiArray: this.multiArray,
        multiIndex: this.multiIndex
      }
      data.multiIndex[e.detail.column] = e.detail.value
      this.setData(data)
    }
  }
</script>
<style lang="less">
.orderDetail{
  width: 750rpx;
  .orderContent{
    width: 690rpx;
    padding: 10rpx 30rpx;
    .flex {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .iconriqi,.iconjiantouarrow486{
      font-size: 36rpx;
      width: 38rpx;
      color: #F42652;
      display: flex;
      align-items: center;
      align-content: center;
    }
    label{
      color: #1F1F1F;
      font-size: 30rpx;
      font-weight: 600;
    }
    .item{
      margin-top: 40rpx;
      .address{
        width: 510rpx;
        input{
          color: #1F1F1F;
          font-size: 24rpx;
          font-weight: 600
        }
      }
      .section {
        width: 510rpx;
        display: flex;
        align-items: center;
        align-content: center;
        .radio{
          margin-right: 90rpx;
          text{
            font-size: 24rpx;
            font-weight: 600;
            color: #1F1F1F;
          }
        }
      }
      .itemDetail{
        margin-top: 30rpx;
        view{
          margin-top: 30rpx;
        }
        text{
          color: #1F1F1F;
          font-size: 24rpx;
          font-weight: 600;
        }
        .number{
          width: 500rpx;
          text-align: right;
        }
      }
      radio .wx-radio-input{
        border-radius: 50%;/* 圆角 */
        width: 22rpx;
        height: 22rpx;
      }
      /* 选中后的 背景样式 （红色背景 无边框 可根据UI需求自己修改） */
      radio .wx-radio-input.wx-radio-input-checked{
        border-color: transparent;
        background: #F42652;
      }
      /* 选中后的 对勾样式 （白色对勾 可根据UI需求自己修改） */
      radio .wx-radio-input.wx-radio-input-checked::before{
        border-radius: 50%;/* 圆角 */
        width: 23rpx; /* 选中后对勾大小，不要超过背景的尺寸 */
        height: 23; /* 选中后对勾大小，不要超过背景的尺寸 */
        line-height: 23rpx;
        text-align: center;
        font-size:16rpx; /* 对勾大小 30rpx */
        color:#fff; /* 对勾颜色 白色 */
        background: transparent;
        transform:translate(-50%, -50%) scale(1);
        -webkit-transform:translate(-50%, -50%) scale(1);
      }
    }
    .inputItem{
      width: 480rpx;
      border: 1.4rpx solid #dfdfdf;
      border-radius: 10rpx;
      padding:8rpx 16rpx;
      input{
        width: 420rpx;
        color: #1F1F1F;
        font-weight: 600;
        font-size: 28rpx;
      }
    }
  }
  .bottom{
    position: fixed;
    left: 0;
    bottom: 0;
    width: 750rpx;
    background: #F42652;
    border-radius: 0;
    text-align: center;
    padding: 12rpx 0;
    color: #fff;
    font-size: 30rpx;
    font-weight: 600;
  }
}
</style>