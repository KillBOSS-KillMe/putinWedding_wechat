<template>
<scroll-view scroll-y="hidden">

	<view class="productDetail">
		<view class="page-section page-section-spacing swiper">
			<swiper indicator-dots="{{indicatorDots}}"	autoplay="{{autoplay}}"	interval="{{interval}}" duration="{{duration}}"	@change="swiperChange">
				 <repeat for="{{banner}}" item="item">
					<swiper-item>
						<image class="swiper-item" src='{{item}}' data-index={{index}} @tap="showImage">
					</swiper-item>
				</repeat>
			</swiper>
			<view class="imageCount">{{current+1}}/{{banner.length}}</view>
		</view>
		<view class="productDetailContent">
			<!-- <view class="item">
				<view class="storeTitle">
					<text class="title">{{productDetail.title}}</text>
				</view>
				<text class="tip">{{productDetail.description}}</text>
			</view> -->
			<view class="item flex mar">
				<label>标题</label>
				<view>{{productDetail.title}}</view>
			</view>
			<view class="item flex mar" wx:if="{{productDetail.type != ''}}">
				<label>服务类型</label>
				<view wx:if="{{productDetail.type == 'normal'}}">单品服务</view>
				<view wx:if="{{productDetail.type == 'bundle'}}">优惠套餐</view>
			</view>
			<view class="item flex mar">
				<label>描述</label>
				<view>{{productDetail.description}}</view>
			</view>
			
			<view class="item flex mar">
				<label>服务区域</label>
				<text>{{productDetail.serviceArea}}</text>
			</view>
			<view class="item flex mar">
				<label>服务档期</label>
				<!-- <text>{{productDetail.time_start}}~{{productDetail.time_end}}</text> -->
			</view>
			<!-- <view>日历</view> -->
			<view class="modal-dialog" wx:if="{{specials.length > 0}}">
				<view class='modalBox'>
					<!-- <view class='calendarTitleh1'>
						选择调整价格时间
						<!-- <view @tap="selAll">全选</view> -->
					<!-- </view> --> 
					<view class='calendarTitle'>
						<icon class="iconfont iconjiantou_zuo" @tap="upMonth"></icon>
						{{thisYear}}年{{thisMonth}}月
						<icon class="iconfont iconjiantou1" @tap="downMonth"></icon>
					</view>
					<!-- 星期显示 -->
					<view class='calendarTitle'>
						<repeat for="{{week}}" item="item">
							<view class="week">{{week[index]}}</view>
						</repeat>
					</view>
					<view class="timeListDom">
						<repeat for="{{weekNum}}" item="item">
							<view></view>
						</repeat>
						<repeat for="{{dayListNode[showMonth]}}" item="item">
							<view class="items noActive" wx:if="{{item.isDid == 0}}">
								{{item.day}}
								<text class="num">{{item.num}}</text>
							</view>
							<view class="items {{item.sel == 1?'active':''}} {{selIndex == index?'activeBorder':''}}" wx:if="{{item.isDid == 1 && step == 1}}"
								@tap="chooseDate"
								data-sel="{{item.sel}}"
								data-key="{{showMonth}}"
								data-index="{{index}}"
								data-time="{{item.time_start}}"
								data-value="{{item.day}}">
								<view class="num" wx:if="{{item.sel == 1}}">{{item.amount}}</view>
								{{item.day}}
								<view class="price" wx:if="{{item.sel == 1}}">￥{{item.price}}</view>
							</view>
						</repeat>
					</view>
				</view>
			</view>
			<view class="item flex mar">
				<label style="color: #f42652">数量</label>
				<text>{{productDetail.amount}}</text>
			</view>
			<view class="item flex mar">
				<label style="color: #f42652" wx:if="{{userInfo.type == 'merchant'}}">同行价</label>
				<label style="color: #f42652" wx:if="{{userInfo.type != 'merchant'}}">市场价</label>
				<text wx:if="{{userInfo.type == 'merchant'}}">￥{{productDetail.peer_price}}</text>
				<text wx:if="{{userInfo.type != 'merchant'}}">￥{{productDetail.market_price}}</text>
			</view>
			<text class="prompt" wx:if="{{userInfo.type != 'merchant'}}">说明：用户通知商家预约，商家接单后，用户可选择支付全款或者押金进行预约</text>
			<view class="item flex mar">
				<label></label>
				<text>   </text>
			</view>
			<view class="item flex mar">
				<label></label>
				<text>   </text>
			</view>
			<view class="item flex mar">
				<label></label>
				<text>   </text>
			</view>
			<view class="item flex mar">
				<label></label>
				<text>   </text>
			</view>
		</view>
		
		<!-- <button class="button" @tap="next" data-id="{{productDetail.id}}">下单</button> -->
		<button class="button" @tap="next" data-id="{{productDetail.id}}" wx:if="{{userInfo.type == 'normal' || isTourist == true}}">下单</button>
		<button class="button" @tap="next" data-id="{{productDetail.id}}" wx:if="{{userInfo.type == 'merchant'}}">修改</button>
	</view>
</scroll-view>
</template>

<script>
import wepy from 'wepy';
export default class ProductDetail extends wepy.page {
  config = {
    navigationBarTitleText: '商品详情'
  };
  data = {
    banner: [],
    userInfo: {},
    current: 0,
    orderId: '',
    productDetail: {},
    options: null,
    requestImgUrl: '',
    isTourist: false,
    specials: [],
    // 日历部分
    // specialsIndex: '',
    // specialsPrice: 0,
    // specialsTime: '',
    // specialsAmount: 0,
    week: ['日', '一', '二', '三', '四', '五', '六'],
    showMonth: '',
    dayListNode: {},
    weekNum: 0,
    thisMonth: 0,
    thisYear: 0,
    // tiemNumSelData: null,
    step: 1,
    // calendarData: [],
    // markers: null,
    selIndex: null,
    thisTime: ''
  };
  components = {};

  mixins = [];

  computed = {};

  methods = {
    showImage(e) {
      let index = e.currentTarget.dataset.index;
      var banner = this.banner;
      wx.previewImage({
        current: banner[index], //当前图片地址
        urls: banner, //所有要预览的图片的地址集合 数组形式
        success: function(res) {},
        fail: function(res) {},
        complete: function(res) {}
      });
    },
    next(e) {
      // this.productDetail.merchant_id = this.options.merchant_id
      // let serviceNode = JSON.stringify(this.productDetail)
      // let url = `/pages/orderDetail?node=${serviceNode}`
      // this.$navigate(url)
      // return false
      // 游客校验
      if (this.isTourist) {
        wx.showModal({
          title: '提示',
          content: '游客不能下单，是否前往注册？',
          success: res => {
            if (res.confirm) {
              // console.log('用户点击确定')
              this.$redirect('/pages/registeredSel');
            } else if (res.cancel) {
              // console.log('用户点击取消')
            }
          }
        });
        return false;
      }
      if (this.userInfo.type == 'normal') {
        this.productDetail.merchant_id = this.options.merchant_id;
        let serviceNode = JSON.stringify(this.productDetail);
        let url = `/pages/orderDetail?node=${serviceNode}`;
        this.$navigate(url);
      } else {
        let url = `/pages/postRevise?id=${e.currentTarget.dataset.id}`;
        this.$navigate(url);
      }
      this.$apply;
    }
  };

  events = {};

  onLoad(options) {
    this.options = options;
    this.orderId = options.id;
    // 获取用户是否为游客
    this.isTourist = this.$parent.globalData.isTourist;
    this.userInfo = this.$parent.globalData.userInfo;
    this.requestImgUrl = this.$parent.globalData.requestImgUrl;
    this.tiemNumSelData = [...Array(100).keys()];
    
  }
  onShow() {
    // 每次显示刷新
	  this.productContent();
  }
  productContent() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/services/detail/${this.orderId}`,
      method: 'GET',
      header: {
        Authorization: this.$parent.globalData.token,
        apikey: this.$parent.globalData.apikey
      },
      success: data => {
        wx.hideToast();
        console.log(data);
        data = this.$parent.null2str(data);
        if (data.data.status_code == 200) {
          this.productDetail = data.data.data;
          this.productDetail.time_start = this.productDetail.time_start.split(
            ' '
          )[0];
          this.productDetail.time_end = this.productDetail.time_end.split(
            ' '
          )[0];
          this.specials = this.productDetail.specials;
          let banner = this.productDetail.images;
          let requestImgUrl = this.requestImgUrl;
          for (let i = 0; i < banner.length; i++) {
            banner[i] = requestImgUrl + banner[i].path;
          }
          this.banner = banner;
          this.$apply();
          // 渲染日历
          this.calendarShow();
        } else if (data.data.status_code == 400) {
          console.log(data.data.status_code);
          wx.showToast({
            title: '服务不存在',
            icon: 'none',
            duration: 10000
          });
          setTimeout(() => {
            wx.navigateBack({
              delta: -1
            });
          }, 2000);
        }
      }
    });
  }
  swiperChange(e) {
    var that = this;
    if (e.detail.source == 'touch') {
      that.current = e.detail.current;
    }
  }
  // 日历显示
  calendarShow() {
    let date = new Date();
    var year = date.getFullYear(); //获取当前年份
    var month = date.getMonth() + 1; //获取当前月份
    var day = date.getDate(); //获取当前日
    this.thisTime = `${year}-${month}-${day}`;
    this.time_start = this.thisTime;
    this.time_end = new Date(year, month, 0);
    this.showMonth = `time${parseInt(year)}_${parseInt(month)}`;
    this.$apply();
    this.getWeek(year, month, day);
  }
  // 刷新当月数据显示
  refreshMonthDom() {
    this.specialsIndex = '';
    this.selIndex = null;
    this.$apply();
    let data = this.thisTime;
    this.thisTime = data;
    this.$apply();
    data = data.split('-');
    this.showMonth = `time${parseInt(data[0])}_${parseInt(data[1])}`;
    this.$apply();
    this.getWeek(data[0], data[1], data[2]);
  }
  // 上一月
  upMonth() {
    let data = this.$parent.getPreMonth(this.thisTime);
    this.thisTime = data;
    this.$apply();
    data = data.split('-');
    this.showMonth = `time${parseInt(data[0])}_${parseInt(data[1])}`;
    this.$apply();
    this.getWeek(data[0], data[1], data[2]);
  }
  // 下一月
  downMonth() {
    let data = this.$parent.getNextMonth(this.thisTime);
    this.thisTime = data;
    this.$apply();
    data = data.split('-');
    this.showMonth = `time${parseInt(data[0])}_${parseInt(data[1])}`;
    this.$apply();
    this.getWeek(data[0], data[1], data[2]);
  }
  getWeek(year, month, day) {
    console.log(year, month, day);
    year = parseInt(year);
    month = parseInt(month);
    day = parseInt(day);
    var arr = [];
    var now = new Date();
    var nowYear = now.getFullYear();
    var nowMonth = now.getMonth() + 1;
    var nowDay = now.getDate();
    // 获取月份天数
    var thisMonthNum = new Date(year, month, 0).getDate();
    let amount = this.amount;
    let time_endStamp = new Date(year, month, 0).getTime();
    // console.log('------------------', this.thisTime.replace(/-/g, '/'))
    let time_startStamp = new Date(
      this.time_start.replace(/-/g, '/')
    ).getTime();
    // console.log('------------------', time_startStamp)
    let specials = this.specials;
    // // 获取开始时间和结束时间
    if (specials.length > 0) {
      let startTime = specials[0].time_start;
      let endTime = specials[0].time_end;
      for (let i = 0; i < specials.length; i++) {
        // specials
        if (
          new Date(startTime.replace(/-/g, '/')).getTime() >
          new Date(specials[i].time_start.replace(/-/g, '/')).getTime()
        ) {
          startTime = specials[i].time_start;
        }
        if (
          new Date(endTime.replace(/-/g, '/')).getTime() <
          new Date(specials[i].time_end.replace(/-/g, '/')).getTime()
        ) {
          endTime = specials[i].time_end;
        }
      }
      this.time_start = startTime;
      this.time_end = endTime;
    }

    // 保存form数据到全局变量
    // this.$parent.globalData.formNode = this.formNode
    for (var i = 1; i <= thisMonthNum; i++) {
      // 显示年份大于等于当前年份
      let startTime = `${year}/${month}/${i}`;
      let endTime = `${year}/${month}/${i}`;
      let timeStamp = new Date(startTime.replace(/-/g, '/')).getTime();
      // console.log(timeStamp, time_startStamp+'-------------'+timeStamp, time_endStamp)
      // console.log(timeStamp >= time_startStamp && timeStamp <= time_endStamp)
      if (timeStamp >= time_startStamp && timeStamp <= time_endStamp) {
        arr.push({
          day: i,
          sel: 0,
          isDid: 1,
          amount: amount,
          time_start: startTime,
          time_end: endTime
        });
        for (let s = 0; s < specials.length; s++) {
          let specialsTimeStamp = new Date(
            specials[s].time_start.replace(/-/g, '/')
          ).getTime();
          if (timeStamp == specialsTimeStamp) {
            let thisindex = i - 1;
            arr[thisindex]['sel'] = 1;
            arr[thisindex]['price'] = specials[s].price;
            arr[thisindex]['amount'] = specials[s].amount;
            arr[thisindex]['time_start'] = specials[s].time_start;
            arr[thisindex]['time_end'] = specials[s].time_end;
          }
        }
      } else {
        arr.push({
          day: i,
          sel: 0,
          isDid: 0,
          amount: amount,
          time_start: startTime,
          time_end: endTime
        });
      }
    }

    // 获取前置个数
    var d = new Date();
    d.setFullYear(year);
    d.setMonth(month - 1);
    d.setDate(1);
    var n = d.getDay();
    this.weekNum = n;
    let key = `time${year}_${month}`;
    this.dayListNode[key] = arr;
    console.log(this.dayListNode);
    this.thisMonth = month;
    this.thisYear = year;
    this.showModal = false;
    this.$apply();
  }
}
</script>
<style lang="less">
scroll-view {
  height: auto;
}
// 日历部分--开始---
.modal-dialog {
  width: 710rpx;
  padding: 0 20rpx;
  overflow: hidden;
  margin: 0 auto;
  z-index: 9999;
  background: rgba(255, 255, 255, 1);
  border-radius: 5rpx;
}
.modalBox {
  width: 100%;
  font-size: 32rpx;
}
.calendarTitle {
  width: 100%;
  height: 80rpx;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 27rpx;
  font-weight: 600;
  color: #1f1f1f;
  position: relative;
  .selAll {
    position: absolute;
    top: 15rpx;
    right: 0;
    padding: 10rpx 20rpx;
    background-color: #f42652;
    color: #fff;
    font-size: 28rpx;
    border-right: 50rpx;
    text-align: center;
  }
  view {
    width: 101.4rpx;
  }
  .iconfont {
    width: 80rpx;
    height: 80rpx;
    font-size: 50rpx;
    color: #999999;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .iconjiantou_zuo {
    font-size: 30rpx;
  }
}
.timeListDom {
  width: 710rpx;
  height: auto;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  flex-direction: row;
  flex-wrap: wrap;
  .items {
    width: 81.4rpx;
    height: 90rpx;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 10rpx 10rpx;
    position: relative;
    color: #999999;
    .num {
      position: absolute;
      top: 5rpx;
      right: 5rpx;
      font-size: 20rpx;
      // color: #F42652;
    }
    .price {
      position: absolute;
      bottom: 5rpx;
      right: 5rpx;
      font-size: 20rpx;
      // color: #F42652;
    }
  }
  .noActive {
    background-color: #ededed;
    color: #999999;
    text {
      color: #f42652;
    }
  }
  .active {
    background-color: #f42652;
    color: #fff;
    text {
      color: #fff;
    }
  }
}
// 日历部分--结束---

// 原有部分
.productDetail {
  width: 750rpx;
  .swiper {
    width: 750rpx;
    height: 314rpx;
    position: relative;
    swiper {
      width: 750rpx;
      height: 100%;
    }
    image {
      width: 100%;
      height: 100%;
    }
    .imageCount {
      width: 120rpx;
      height: 50rpx;
      background-color: rgba(0, 0, 0, 0.3);
      border-radius: 40rpx;
      line-height: 50rpx;
      color: #fff;
      text-align: center;
      font-size: 26rpx;
      position: absolute;
      right: 26rpx;
      bottom: 20rpx;
    }
  }
  .productDetailContent {
    margin-bottom: 200rpx;
    .mar {
      padding-bottom: 18rpx !important;
    }
    .item {
      padding: 30rpx 30rpx 0;
      // border-bottom: 2rpx solid #D8D8D8;
      .title {
        text-align: center;
        display: inline-block;
        font-size: 32rpx;
        font-weight: 600;
        color: #1f1f1f;
      }
      .storeTitle {
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .titleTip {
        border: 1rpx solid #f42652;
        color: #f42652;
        padding: 2rpx 6rpx;
        border-radius: 4rpx;
        display: initial;
        text-align: center;
        font-size: 20rpx;
        margin-left: 10rpx;
      }
      .tip {
        display: flex;
        justify-content: flex-start;
        align-items: center;
        font-size: 24rpx;
        color: #494949;
        display: block;
        margin-top: 10rpx;
      }
      label {
        font-size: 30rpx;
        color: #1f1f11;
        text-align: left;
        display: block;
        width: 300rpx;
      }
      text {
        font-size: 30rpx;
        color: #1f1f1f;
        text-align: right;
        display: block;
      }
      text.cur {
        font-weight: 600;
        font-size: 32rpx;
        color: #f42652;
      }
    }
    .flex {
      display: flex;
      justify-content: space-between;
    }
  }
  .prompt {
    font-size: 30rpx;
    padding: 30rpx;
    display: block;
    color: #494949;
  }
  .button {
    position: fixed;
    left: 0;
    bottom: 0;
    width: 750rpx;
    background: #f42652;
    border-radius: 0;
    text-align: center;
    padding: 12rpx 0;
    color: #fff;
    // margin: 100rpx auto 0;
    font-size: 30rpx;
    font-weight: 600;
  }
}
</style>
