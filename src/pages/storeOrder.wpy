<template>
	<view class="productDetail">
		<view class="page-section page-section-spacing swiper">
			<swiper indicator-dots="{{indicatorDots}}"	autoplay="{{autoplay}}"	interval="{{interval}}" duration="{{duration}}"	@change="swiperChange">
				 <repeat for="{{banner}}" item="item">
					<swiper-item>
						<image class="swiper-item" src='{{item.img}}'>
					</swiper-item>
				</repeat>
			</swiper>
			<view class="imageCount">{{current+1}}/{{banner.length}}</view>
		</view>
		<view class="productDetailContent">
			<view class="item">
				<view class="storeTitle">
					<text class="title">{{productDetail.title}}</text>
					<text class="titleTip">车队</text>
				</view>
				<text class="tip">{{productDetail.tip}}</text>
			</view>
			<view class="item flex">
				<label>需要日期</label>
				<text>{{productDetail.data}}</text>
			</view>
			<view class="item flex">
				<label>所需服务地点</label>
				<text>{{productDetail.title}}</text>
			</view>
		</view>
		<button class="button">商家接单</button>
	</view>
</template>

<script>
import wepy from 'wepy'
export default class StoreOrder extends wepy.page {
  config = {
    navigationBarTitleText: '商家接单'
  };
  data = {
    banner: [
      { img: '../image/meBj.png' },
      { img: '../image/meBj.png' },
      { img: '../image/meBj.png' }
		],
		current: 0,
		productDetail: { title: '测试测试测试', tip: '温馨提示测试测试测试', handsel: '30', bosses: '70', price: '100', site: '陕西省.西安市.雁塔区', data: '2019.10.05-2019.11.3', region: '西安市||咸阳市' } // bosses尾款
	}
	swiperChange (e) {
    var that = this
    if (e.detail.source == 'touch') {
      that.current = e.detail.current
    }
	}
	methods = {

	}
	onLoad() {
		this.storeContent()
	}
	storeContent() {
    wx.request({
      url: `${this.$parent.globalData.requestUrl}/merchants/services`,
      method: 'GET',
      header: {
        Authorization: this.$parent.globalData.token,
        apikey: this.$parent.globalData.apikey
      },
      data: {
        id:this.orderId
      },
      success: data => {
        wx.hideToast()
        data = this.$parent.null2str(data)
        if (data.statusCode == 200) {
          console.log(data.data)
          this.list=data.data.data
          this.$apply()
        }
      }
    })
	}
}
</script>
<style lang="less">
.productDetail {
	width: 750rpx;
	.swiper{
		width: 750rpx;
		height: 314rpx;
		position: relative;
		swiper{
			width: 750rpx;
			height: 100%;
		}
		image{
			width: 100%;
			height: 100%;
		}
		.imageCount {
			width:120rpx;
			height:50rpx;
			background-color: rgba(0, 0, 0, 0.3);
			border-radius:40rpx;
			line-height:50rpx;
			color:#fff;
			text-align:center;
			font-size:26rpx;
			position:absolute;
			right:26rpx;
			bottom:20rpx;
		}
	}
	.productDetailContent{
		.item{
			padding: 30rpx 30rpx 0;
			.title{
				text-align: center;
				display: inline-block;
				font-size: 32rpx;
				font-weight: 600;
				color: #1F1F1F;
			}
			.storeTitle{
				display: flex;
				justify-content: center;
				align-items: center;
			}
			.titleTip{
				border: 1rpx solid #F42652;
				color: #F42652;
				padding: 2rpx 6rpx;
				border-radius: 4rpx;
				display: initial;
				text-align: center;
				font-size: 20rpx;
				margin-left: 10rpx;
			}
			.tip{
				text-align: center;
				font-size: 24rpx;
				color: #494949;
				display: block;
				margin-top: 10rpx;
			}
			label{
				font-size: 30rpx;
				color: #1f1f1f;
				text-align: left;
				display: block;
			}
			text{
				font-size: 30rpx;
				color: #1f1f1f;
				text-align: right;
				display: block;
			}
		}
		.flex{
			display: flex;
			justify-content: space-between;
		}
	}
	.button{
		position: fixed;
		left: 0;
		bottom: 0;
		width: 750rpx;
		background: #F42652;
		border-radius: 0;
		text-align: center;
		padding: 12rpx 0;
		color: #fff;
		// margin: 100rpx auto 0;
		font-size: 30rpx;
		font-weight: 600
	}
}
</style>
